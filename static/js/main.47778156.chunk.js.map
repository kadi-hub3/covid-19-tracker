{"version":3,"sources":["components/Cards.js","api.js","components/Country.js","components/Chart.js","components/Title.js","App.js","index.js"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","Grid","container","xs","direction","spacing","justify","item","component","Card","className","CardContent","Typography","color","variant","start","end","value","separator","duration","Date","toDateString","url","fetchData","country","a","changeUrl","axios","get","console","log","fetchDailyData","map","dailyData","total","fetchCountries","countries","name","Country","handleCountry","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","Chart","date","setDailyData","line","undefined","length","labels","datasets","label","borderColor","fill","bar","backgroundColor","options","legend","display","title","text","Title","subtitle","App","state","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47778156.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core'\nimport CountUp from 'react-countup'\nimport '../index.css'\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\n    if (!confirmed) {\n        return `loading`\n    }\n\n    return (\n        < div >\n            <Grid container xs={12} direction='row' spacing={3} justify='center' >\n                <Grid item xs={3} component={Card} className='infected-card card'>\n                    <CardContent>\n                        <Typography color='textSecondary'>Infected</Typography>\n                        <Typography variant='h4'>\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                separator=','\n                                duration={2} />\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography>Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item xs={3} component={Card} className='recovered-card card'>\n                    <CardContent>\n                        <Typography color='textSecondary'>Recovered</Typography>\n                        <Typography variant='h4'>\n                            <CountUp\n                                start={0}\n                                end={recovered.value}\n                                separator=','\n                                duration={2} />\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography>Number of recovered cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item xs={3} component={Card} className='deaths-card card'>\n                    <CardContent>\n                        <Typography color='textSecondary'>Deaths</Typography>\n                        <Typography variant='h4'>\n                            <CountUp\n                                start={0}\n                                end={deaths.value}\n                                separator=','\n                                duration={2} />\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography>Number of death cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n            </Grid>\n\n        </div >\n    )\n}\n\nexport default Cards\n","import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api'\n\nconst fetchData = async (country) => {\n    let changeUrl = url\n\n    if (country) {\n        changeUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const { data: {\n            confirmed, recovered, deaths, lastUpdate\n        } } = await axios.get(changeUrl)\n\n        return { confirmed, recovered, deaths, lastUpdate }\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport default fetchData\n\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`)\n        return data.map(dailyData => ({\n            confirmed: dailyData.confirmed.total,\n            recovered: dailyData.recovered.total,\n            deaths: dailyData.deaths.total\n        }))\n    } catch (error) {\n        console.log(error);\n    }\n\n}\n\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`)\n        return countries.map(country => country.name)\n\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport { fetchCountries } from '../api'\nimport '../index.css'\nimport { FormControl, NativeSelect } from '@material-ui/core'\n\nconst Country = ({ handleCountry }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([])\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries())\n        }\n        fetchAPI()\n    }, [setFetchedCountries])\n\n    return (\n        <FormControl className='form'>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountry(e.target.value)} variant=\"filled\">\n                <option value=\"global\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default Country\n","import React, { useState, useEffect } from 'react'\nimport { Line, Bar } from 'react-chartjs-2'\nimport '../index.css'\nimport { fetchDailyData } from '../api'\n\nconst Chart = ({ data: { confirmed, recovered, deaths, date }, country }) => {\n    const [dailyData, setDailyData] = useState([])\n\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData())\n        }\n        fetchAPI()\n    }, [])\n\n    const line =\n        ((dailyData !== undefined && dailyData.length) ?\n            <Line\n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#00a9fe',\n                        fill: 'true'\n                    }, {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: 'Deaths',\n                        borderColor: '#fd6bb6',\n                        fill: 'true'\n                    }]\n                }} /> : null\n        )\n\n    const bar = (confirmed ?\n        (<Bar\n            data={{\n                labels: ['Infected', 'Recovered', 'Deaths'],\n                datasets: [{\n                    label: 'People',\n                    backgroundColor: ['#00a9fe', '#d9eb4b', '#fd6bb6'],\n                    data: [confirmed.value, recovered.value, deaths.value]\n                }]\n            }}\n            options={{\n                legend: { display: false },\n                title: { display: true, text: `Current State in ${country}` }\n            }}\n\n        />) : null\n    )\n\n    return (\n        <div className='container'>\n            {country ? bar : line}\n        </div>\n    )\n\n\n\n}\n\nexport default Chart\n","import React from 'react'\n\nconst Title = ({ title, subtitle }) => {\n    return (\n        <div className='title'>\n            <h2>{title}</h2>\n            <h6>{subtitle}</h6>\n        </div>\n    )\n}\n\nexport default Title\n","import React from 'react'\nimport Cards from './components/Cards'\nimport Country from './components/Country'\nimport Chart from './components/Chart'\nimport Title from './components/Title'\nimport fetchData from './api'\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: ''\n\n  }\n\n  async componentDidMount() {\n    const data = await fetchData()\n\n    this.setState({ data })\n  }\n\n\n  handleCountry = async (country) => {\n    const data = await fetchData(country)\n\n    this.setState({ data: data, country: country })\n\n  }\n\n  render() {\n    const { data, country } = this.state\n\n    return (\n      <div className='app'>\n        <Title title='Covid-19 Tracker' subtitle='All Around The World' />\n        <Cards data={data} />\n        <Country handleCountry={this.handleCountry} />\n        <Chart data={data} country={country} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}