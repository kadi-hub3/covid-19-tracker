{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","API.js","components/Chart/Chart.jsx","components/Country/Country.jsx","components/DarkMode/DarkMode.jsx","components/Title/Title.jsx","App.js","index.js","components/DarkMode/DarkMode.module.css","components/Chart/Chart.module.css","components/Title/Title.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeUrl","axios","get","console","log","fetchDailyData","map","dailyData","total","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","undefined","length","labels","date","datasets","label","borderColor","fill","BarChart","backgroundColor","options","legend","display","title","text","Country","handleCountry","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","DarkMode","type","checkbox","check","Title","subtitle","App","state","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf2bcd04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react'\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\nimport styles from './Cards.module.css'\n\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n    if (!confirmed) {\n        return `loading`\n    }\n    return (\n        <div className={styles.container} >\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\">Infected</Typography>\n                        <Typography variant=\"h4\">\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\">Recovered</Typography>\n                        <Typography variant=\"h4\">\n                            <CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\">Deaths</Typography>\n                        <Typography variant=\"h4\">\n                            <CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards","import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api'\n\nconst fetchData = async (country) => {\n    let changeUrl = url\n\n    if (country) {\n        changeUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const { data: {\n            confirmed, recovered, deaths, lastUpdate\n        } } = await axios.get(changeUrl)\n\n        return { confirmed, recovered, deaths, lastUpdate }\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport default fetchData\n\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`)\n        return data.map(dailyData => ({\n            confirmed: dailyData.confirmed.total,\n            recovered: dailyData.recovered.total,\n            deaths: dailyData.deaths.total\n        }))\n    } catch (error) {\n        console.log(error);\n    }\n\n}\n\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`)\n        return countries.map(country => country.name)\n\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport { fetchDailyData } from '../../API'\nimport { Line, Bar } from 'react-chartjs-2'\nimport styles from './Chart.module.css'\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData())\n        }\n        fetchAPI()\n    }, [])\n    const lineChart = (\n        (undefined !== dailyData && dailyData.length)\n            ? (<Line\n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#00a9fe',\n                        fill: true,\n                    }, {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: 'Deaths',\n                        borderColor: '#fd6bb6',\n                        fill: true,\n                    }]\n                }}\n            />) : null\n    )\n\n    const BarChart = (\n        confirmed ? (\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: ['#00a9fe', '#d9eb4b', '#fd6bb6'],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current State in ${country}` }\n                }}\n            />\n        ) : null\n    )\n    return (\n        <div className={styles.container}>\n            {country ? BarChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart","import React, { useState, useEffect } from 'react'\nimport { NativeSelect, FormControl } from '@material-ui/core'\nimport styles from './Country.module.css'\nimport { fetchCountries } from '../../API'\n\nconst Country = ({ handleCountry }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([])\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries())\n        }\n        fetchAPI()\n    }, [setFetchedCountries])\n\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountry(e.target.value)} variant=\"filled\">\n                <option value=\"global\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default Country","import React from 'react'\nimport styles from './DarkMode.module.css'\n\nconst DarkMode = () => {\n    return (\n        <label>\n            <input type='checkbox' className={styles.checkbox} />\n            <span className={styles.check}></span>\n        </label>\n\n    )\n}\n\nexport default DarkMode\n","import React from 'react'\nimport styles from './Title.module.css'\n\nconst Title = ({ title, subtitle }) => {\n    return (\n        <h2 className={styles.title}>\n            {title}\n            <span> {subtitle}</span>\n        </h2>\n\n    )\n}\n\nexport default Title\n","import React from 'react'\nimport { Cards, Chart, Country, DarkMode, Title } from './components'\nimport styles from './App.module.css'\nimport fetchData from './API'\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: ''\n\n  }\n\n  async componentDidMount() {\n    const data = await fetchData()\n\n    this.setState({ data })\n  }\n\n\n  handleCountry = async (country) => {\n    const data = await fetchData(country)\n\n    this.setState({ data: data, country: country })\n\n  }\n\n  render() {\n    const { data, country } = this.state\n\n    return (\n      <div className={styles.container}>\n        <DarkMode />\n        <Title title='Covid-19 Tracker' subtitle='All Around The World' />\n        <Cards data={data} />\n        <Country handleCountry={this.handleCountry} />\n        <Chart data={data} country={country} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"DarkMode_checkbox__3kGiC\",\"check\":\"DarkMode_check__3Tcwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1jlrO\",\"glow\":\"Title_glow__21bkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}